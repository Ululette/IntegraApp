BEGIN;

CREATE TABLE institutions
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    name text NOT NULL UNIQUE,
    phone_number text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE states
(
    id integer not null unique,
    name text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE localities
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    id_locality integer not null,
    name text NOT NULL,
    cp text NOT NULL,
    state_id integer not null,
    PRIMARY KEY (id),
    FOREIGN KEY (state_id) REFERENCES states(id)
);

CREATE TABLE address
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    institution_id integer not null,
    locality_id  bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    street text NOT NULL,
    street_number integer NOT NULL,
    floor integer NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (locality_id) REFERENCES localities(id),
    FOREIGN KEY (institution_id) REFERENCES institutions(id)
);

CREATE TABLE plans
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    name text NOT NULL,
    price integer NOT NULL,
    PRIMARY KEY (id),
    CHECK(price >= 0)
);

CREATE TABLE companies (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    business_name text NOT NULL,
    cuit integer NOT NULL,
    phone_number integer NOT NULL,
    email text NOT NULL,
    PRIMARY KEY (id),
    CHECK (cuit>0),
    CHECK (phone_number>0)
);

CREATE TABLE partners
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    dni integer NOT NULL UNIQUE,
    name text NOT NULL,
    lastname text NOT NULL,
    age integer NOT NULL,
    birthdate date NOT NULL,
    phone_number text NOT NULL,
    titular boolean NOT NULL,
    family_bond text NOT NULL,
    family_group integer NOT NULL,
    state text NOT NULL,
    email text NOT NULL UNIQUE,
    address_id integer,
    plan_id integer not null,
    company_id integer,
    user_id uuid,
    PRIMARY KEY (id),
    FOREIGN KEY (address_id) REFERENCES address(id),
    FOREIGN KEY (plan_id) REFERENCES plans(id),
    FOREIGN KEY (company_id) REFERENCES companies(id),
    FOREIGN KEY (user_id) REFERENCES users(id),
    CHECK(age >= 0),
    CHECK(dni > 0)
);







CREATE TABLE medical_documentations
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    type text NOT NULL,
    date date NOT NULL,
    medic_name text NOT NULL,
    category text,
    document_url text,
    PRIMARY KEY (id)
);

CREATE TABLE pathologies
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    name text NOT NULL UNIQUE,
    PRIMARY KEY (id)
);

CREATE TABLE medical_records
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    partner_dni integer not null,
    document_url text NOT NULL UNIQUE,
    PRIMARY KEY (id),
    FOREIGN KEY (partner_dni) REFERENCES partners(dni)
);

CREATE TABLE favorites
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    partner_dni integer not null,
    type_favorite text NOT NULL,
    id_favorite integer NOT NULL,
    FOREIGN KEY (partner_dni) REFERENCES partners(dni)
);



CREATE TABLE benefits
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    title text NOT NULL UNIQUE,
    description text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE news
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    title text NOT NULL,
    img text NOT NULL,
    summary text NOT NULL,
    description text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE admins
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    name text NOT NULL,
    lastname text NOT NULL,
    age integer NOT NULL,
    root boolean NOT NULL,
    dni integer NOT NULL,
    user_id uuid not null,
    PRIMARY KEY (id),
    FOREIGN KEY (user_id) REFERENCES users(id),
    CHECK(age >= 18),
    CHECK(dni > 0)
);

CREATE TABLE guest_contacts
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    dni integer NOT NULL,
    name "char" NOT NULL,
    age integer NOT NULL,
    phone_number text NOT NULL,
    email text NOT NULL,
    PRIMARY KEY (id),
    CHECK(dni > 0),
    CHECK(age > 0)
);

CREATE TABLE users
(
    id uuid NOT NULL UNIQUE,
    email text NOT NULL,
    dni integer NOT NULL,
    role text NOT NULL,
    avatar_url text,
    PRIMARY KEY (id),
    CHECK(dni > 0)
);



CREATE TABLE medic_specialities
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    name text NOT NULL UNIQUE,
    PRIMARY KEY (id)
);

CREATE TABLE medics
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    user_id uuid not null UNIQUE,
    dni integer NOT NULL UNIQUE,
    name text NOT NULL,
    lastname text NOT NULL,
    medic_license text NOT NULL,
    email text NOT NULL,
    phone_number text NOT NULL,
    state text NOT NULL,
    age integer,
    speciality_id integer not null,
    PRIMARY KEY (id),
    FOREIGN KEY (speciality_id) REFERENCES medic_specialities(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE medical_consultations
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    partner_dni integer not null,
    medic_dni integer not null,
    reason text NOT NULL,
    diagnosis text NOT NULL,
    date date NOT NULL,
    observations text,
    PRIMARY KEY (id),
    FOREIGN KEY (partner_dni) REFERENCES partners(dni),
    FOREIGN KEY (medic_dni) REFERENCES medics(dni)
);



CREATE TABLE orders
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    medical_consultation_id integer not null,
    study_name text NOT NULL,
    date date NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (medical_consultation_id) REFERENCES medical_consultations(id)
);

CREATE TABLE prescriptions
(
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL UNIQUE,
    medical_consultation_id INTEGER NOT NULL,
    drug_name text NOT NULL,
    date date,
    drug_name_2 text,
    PRIMARY KEY (id),
    FOREIGN KEY (medical_consultation_id) REFERENCES medical_consultations(id)

);





CREATE TABLE pathologies_partners
(
    pathologies_id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    partners_id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL
);

CREATE TABLE benefits_plans
(
    benefits_id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    plans_id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL
);

ALTER TABLE medical_documentations
    ADD FOREIGN KEY (id)
    REFERENCES partners (id)
    NOT VALID;


ALTER TABLE pathologies_partners
    ADD FOREIGN KEY (pathologies_id)
    REFERENCES pathologies (id)
    NOT VALID;


ALTER TABLE pathologies_partners
    ADD FOREIGN KEY (partners_id)
    REFERENCES partners (id)
    NOT VALID;


ALTER TABLE benefits_plans
    ADD FOREIGN KEY (benefits_id)
    REFERENCES benefits (id)
    NOT VALID;


ALTER TABLE benefits_plans
    ADD FOREIGN KEY (plans_id)
    REFERENCES plans (id)
    NOT VALID;

ALTER TABLE medical_consultations
    ADD FOREIGN KEY (id)
    REFERENCES medics (id)
    NOT VALID;


ALTER TABLE medical_consultations
    ADD FOREIGN KEY (id)
    REFERENCES partners (id)
    NOT VALID;

END;