{"version":3,"sources":["../node_modules/@firebase/database/dist/index.esm.js","../node_modules/webpack/buildin/harmony-module.js"],"names":["SDK_VERSION","setSDKVersion","version","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spreadArray","__read","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","bias","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","AppCheckTokenProvider","appName_","appCheckProvider","_this","appCheck","getImmediate","optional","then","getToken","forceRefresh","Promise","resolve","reject","addTokenChangeListener","listener","_a","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","auth","catch","code","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","FORGE_DOMAIN_RE","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","indexOf","internalHost","isCacheableHost","isCustomHost","Object","defineProperty","newHost","enumerable","configurable","toURLString","protocol","query","repoInfoConnectionURL","repoInfo","type","params","connURL","repoInfoNeedsQueryParam","pairs","StatsCollection","counters_","incrementCounter","amount","deepCopy","collections","reporters","statsManagerGetCollection","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","document","readyState","called_1","wrappedFn_1","body","addEventListener","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","location","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","size","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","e_1","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","_b","__values","ALL_TRANSPORTS","_c","next","done","transport","e_1_1","return","call","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","_super","online_","isMobileCordova","__extends","getInstance","currentlyOnline","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","validationPathCheckValid","validationPath","validationPathToErrorString","__EMPTY_NODE","MAX_NODE","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","onVisible_","onOnline_","action","onResponse","curReqNum","r","initConnection_","deferred","Deferred","request","p","_path","q","_queryObject","outstandingGet","index","undefined","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","removeListen_","warnings","safeGet","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","tryAppCheck","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","onAppCheckRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","__awaiter","onDataMessage","onReady","onDisconnect_1","canceled_1","connection_1","closeFn","sendRequestFn","error_1","__generator","label","nextConnectionId_","trys","all","sent","interrupt","resume","isEmpty","delta","serverTimeOffset","map","normalizedPathString","statusCode","explanation","console","replace","e_2","values","_d","queries","_e","_f","e_2_1","clientName","isReactNative","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","pop","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","Default","child","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","setMaxNode$1","nodeFromJSON$1","json","node_1","childData","children_1","childrenHavePriority_1","childSet","sortedChildSet","setNodeFromJSON","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","VALUE_INDEX","ValueIndex","PUSH_CHARS","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","i_1","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","childKey","childSnap","changeAccumulator","indexCmp_1","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","limitSet_","startSet_","startNameSet_","startAfterSet_","endSet_","endNameSet_","endBeforeSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasStartAfter","hasEndBefore","hasLimit","hasAnchoredLimit","queryParamsStartAt","queryParams","newParams","queryParamsEndAt","queryParamsOrderBy","queryParamsToRestQueryStringParameters","orderBy","qs","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","querystring","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","children","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","sparseSnapshotTreeForEachTree","prefixPath","func","forEach","sparseSnapshotTreeForEachChild","OperationType","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","emptyChildrenSingleton","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","filter","change","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","ImmutableTree","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite_1","writeTreeChildWrites","newWriteTreeRef","writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","merge_1","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","filterServerNode","accumulator","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","serverChildren","viewProcessorRevertUserWrite","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","viewProcessorAckUserWrite","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","referenceConstructor","View","initialViewCache","eventRegistrations_","indexFilter","processor_","newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteServerCache","view","cache","viewIsEmpty","viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","path_1","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","referenceConstructor$1","SyncPoint","views","syncPointApplyOperation","syncPoint","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","viewAddEventRegistration","initialChanges","viewGetInitialEvents","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","_repo","syncPointGetQueryViews","e_3","e_3_1","syncPointGetCompleteServerCache","e_4","e_4_1","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","e_5","e_5_1","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","writeTreeAddOverwrite","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","writeTreeAddMerge","changeTree","syncTreeAckUserWrite","record","writeTreeGetWrite","affectedTree_1","syncTreeApplyServerOverwrite","syncTreeRemoveEventRegistration","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","maybeChildSyncPoint","childMap","views_1","_key","childViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","removedQuery","removedQueryKey","removedQueryTag","syncTreeRemoveTags_","syncTreeAddEventRegistration","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","queryKey","queriesToStop","queries_1","childQueries","queryToStop","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","syncTreeGetServerValue","serverCacheNode","viewGetCompleteNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","viewGetServerCache","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeApplyTaggedListenComplete","syncTreeApplyListenComplete","toUpperCase","errorForServerCode","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","unused","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefix","hasDotValue_1","hasActualChild_1","validationPathPush","last","validationPathPop","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","validateKey","argumentName","validatePathString","validateWritablePath","validateUrl","parsedUrl","isValidRootPathString","validateBoolean","bool","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","search","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","statsReporter_","creatorFunction","statsManagerGetOrCreateReporter","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","repoServerTime","offset","repoGenerateServerValues","taggedChildren","raw","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyServerMerge","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoOnDisconnectCancel","repoOnDisconnectSet","repoRemoveEventCallbackForQuery","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","every","transaction","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","callbacks","currentOutputSnapshotResolved","unwatcher","abortReason","repoSendTransactionQueue","rootMostTransactionNode","repoGetAncestorTransactionNode","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","to","treeForEachAncestor","repoAbortTransactionsOnNode","lastSent","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryString","results","segment","kv","decodeQuery","hostWithoutPort","dotInd","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","onCancel","hasCancelCallback","userCallback","OnDisconnect","cancel","wrapCallback","setWithPriority","repoOnDisconnectSetWithPriority","childrenToMerge","repoOnDisconnectUpdate","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","getModularInstance","sameRepo","samePath","sameQueryIdentifier","toJSON","encodeURIComponent","pathToUrlEncodedString","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","DataSnapshot","_node","_index","childRef","exists","hasChildren","db","_checkNotDeleted","_root","refFromURL","parsedURL","thennablePushRef","pushRef","setPriority","changedKey","changedValue","writeId_1","repoUpdate","cached","err","repoGetValue","ValueEventRegistration","callbackContext","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onlyOnce","userCallback_1","onceCallback","dataSnapshot","container","repoAddEventCallbackForQuery","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_value","_apply","endAt","QueryEndBeforeConstraint","queryParamsEndBefore","endBefore","QueryStartAtConstraint","startAt","QueryStartAfterConstraint","queryParamsStartAfter","startAfter","QueryLimitToFirstConstraint","_limit","newLimit","queryParamsLimitToFirst","limitToFirst","limit","QueryLimitToLastConstraint","queryParamsLimitToLast","limitToLast","QueryOrderByChildConstraint","parsedPath","orderByChild","QueryOrderByKeyConstraint","orderByKey","QueryOrderByPriorityConstraint","orderByPriority","QueryOrderByValueConstraint","orderByValue","QueryEqualToValueConstraint","equalTo","queryConstraints","queryImpl","queryConstraints_1","queryConstraints_1_1","constraint","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","repos","useRestClient","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","repoManagerCreateRepo","FirebaseDatabase","_repoInternal","_instanceStarted","_rootInternal","_delete","appName","repoManagerDeleteRepo","apiName","useDatabaseEmulator","tokenProvider","mockUserToken","createMockUserToken","repoManagerApplyEmulatorSettings","goOffline","goOnline","SERVER_TIMESTAMP","TransactionResult","committed","runTransaction","transactionUpdate","currentState","queueNode","priorityForNode","repoStartTransaction","OnDisconnect$1","_delegate","validateArgCount","validateCallback","objectToMerge","newObjectToMerge","TransactionResult$1","DataSnapshot$1","_database","getRef","Reference","Query","database","cancelCallbackOrContext","ret","getCancelAndContextArgs_","valueCallback","expSnapshot","validateContextObject","once","failureCallbackOrContext","cancelOrContext","getKey","getParent","getRoot","transactionResult","expPromise","expRef","Database","INTERNAL","useEmulator","ServerValue","TIMESTAMP","increment","freeze","__proto__","forceLongPolling","forceWebSockets","setSecurityDebugCallback","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","repoStats","statsIncrementCounter","metric","reporter","repoStatsIncrementCounter","interceptServerData","repoInterceptServerData","initStandalone","customAuthImpl","Provider","ComponentContainer","setComponent","Component","instance","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","queryIdentifier","forceRestClient","repoManagerForceRestClient","registerComponent","instanceIdentifier","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports","registerDatabase","firebase","originalModule","webpackPolyfill","create","l"],"mappings":"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","file":"static/js/5.fabd3dda.chunk.js","sourcesContent":["import firebase from '@firebase/app';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, base64, stringToByteArray, Sha1, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, createMockUserToken, validateArgCount, validateCallback, validateContextObject } from '@firebase/util';\nimport { __spreadArray, __read, __values, __extends, __awaiter, __generator, __assign } from 'tslib';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nvar name = \"@firebase/database\";\nvar version = \"0.10.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    };\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    var sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n    };\r\n};\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n};\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spreadArray([], __read(varArgs)));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nvar INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\r\nvar AppCheckTokenProvider = /** @class */ (function () {\r\n    function AppCheckTokenProvider(appName_, appCheckProvider) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({ optional: true });\r\n        if (!this.appCheck) {\r\n            appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(function (appCheck) { return (_this.appCheck = appCheck); });\r\n        }\r\n    }\r\n    AppCheckTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        var _this = this;\r\n        if (!this.appCheck) {\r\n            return new Promise(function (resolve, reject) {\r\n                // Support delayed initialization of FirebaseAppCheck. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // AppCheck and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(function () {\r\n                    if (_this.appCheck) {\r\n                        _this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.appCheck.getToken(forceRefresh);\r\n    };\r\n    AppCheckTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        var _a;\r\n        (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(function (appCheck) { return appCheck.addTokenListener(listener); });\r\n    };\r\n    AppCheckTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        warn(\"Provided AppCheck credentials for the app named \\\"\" + this.appName_ + \"\\\" \" +\r\n            'are invalid. This usually indicates your app was not initialized correctly.');\r\n    };\r\n    return AppCheckTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(appName_, firebaseOptions_, authProvider_) {\r\n        var _this = this;\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.onInit(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        var _this = this;\r\n        if (!this.auth_) {\r\n            return new Promise(function (resolve, reject) {\r\n                // Support delayed initialization of FirebaseAuth. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // Auth and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(function () {\r\n                    if (_this.auth_) {\r\n                        _this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\r\nvar EmulatorTokenProvider = /** @class */ (function () {\r\n    function EmulatorTokenProvider(accessToken) {\r\n        this.accessToken = accessToken;\r\n    }\r\n    EmulatorTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: this.accessToken\r\n        });\r\n    };\r\n    EmulatorTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(this.accessToken);\r\n    };\r\n    EmulatorTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\r\n    EmulatorTokenProvider.OWNER = 'owner';\r\n    return EmulatorTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nvar FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar APP_CHECK_TOKEN_PARAM = 'ac';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (nodeAdmin === void 0) { nodeAdmin = false; }\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    };\r\n    Object.defineProperty(RepoInfo.prototype, \"host\", {\r\n        get: function () {\r\n            return this._host;\r\n        },\r\n        set: function (newHost) {\r\n            if (newHost !== this.internalHost) {\r\n                this.internalHost = newHost;\r\n                if (this.isCacheableHost()) {\r\n                    PersistentStorage.set('host:' + this._host, this.internalHost);\r\n                }\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    RepoInfo.prototype.toURLString = function () {\r\n        var protocol = this.secure ? 'https://' : 'http://';\r\n        var query = this.includeNamespaceInQueryParams\r\n            ? \"?ns=\" + this.namespace\r\n            : '';\r\n        return \"\" + protocol + this.host + \"/\" + query;\r\n    };\r\n    return RepoInfo;\r\n}());\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    var connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    var pairs = [];\r\n    each(params, function (key, value) {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar collections = {};\r\nvar reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    var hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    var hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        var _this = this;\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            // Always add the token if we have one.\r\n            if (_this.appCheckToken) {\r\n                params[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\r\n            }\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (_this.appCheckToken) {\r\n                urlParams[APP_CHECK_TOKEN_PARAM] = _this.appCheckToken;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId, appCheckToken) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        if (appCheckToken) {\r\n            urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                var device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // If using Node with admin creds, AppCheck-related checks are unnecessary.\r\n                // It will send the authorization token.\r\n                if (this.nodeAdmin) {\r\n                    options.headers['Authorization'] = this.authToken || '';\r\n                }\r\n                else {\r\n                    // If using Node without admin creds (which includes all uses of the\r\n                    // client-side Node SDK), it will send an AppCheck token if available.\r\n                    // Any other auth credentials will eventually be sent after the connection\r\n                    // is established, but aren't needed here as they don't effect the initial\r\n                    // request to establish a connection.\r\n                    options.headers['X-Firebase-AppCheck'] = this.appCheckToken || '';\r\n                }\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || '',\r\n                        'X-Firebase-AppCheck': this.appCheckToken || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.appCheckToken_ = appCheckToken_;\r\n        this.authToken_ = authToken_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */\r\n    ServerActions.prototype.refreshAppCheckToken = function (token) { };\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = __spreadArray([], __read(this.listeners_[eventType]));\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    __extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nvar MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nvar MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    return Path;\r\n}());\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    var pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    var pathString = '';\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin) {\r\n    if (begin === void 0) { begin = 0; }\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    var pieces = [];\r\n    for (var i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        var childPieces = childPathObj.split('/');\r\n        for (var i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    var outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    var leftKeys = pathSlice(left, 0);\r\n    var rightKeys = pathSlice(right, 0);\r\n    for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (var i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    var i = path.pieceNum_;\r\n    var j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n    return ValidationPath;\r\n}());\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    var last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    __extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    __extends(PersistentConnection, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingGets_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.outstandingGetCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.appCheckToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.invalidAppCheckTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.get = function (query) {\r\n        var _this = this;\r\n        this.initConnection_();\r\n        var deferred = new Deferred();\r\n        var request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        var outstandingGet = {\r\n            action: 'g',\r\n            request: request,\r\n            onComplete: function (message) {\r\n                var payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    _this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        var index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(function () {\r\n                var get = _this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete _this.outstandingGets_[index];\r\n                _this.outstandingGetCount_--;\r\n                if (_this.outstandingGetCount_ === 0) {\r\n                    _this.outstandingGets_ = [];\r\n                }\r\n                _this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        this.initConnection_();\r\n        var queryId = query._queryIdentifier;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendGet_ = function (index) {\r\n        var _this = this;\r\n        var get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, function (message) {\r\n            delete _this.outstandingGets_[index];\r\n            _this.outstandingGetCount_--;\r\n            if (_this.outstandingGetCount_ === 0) {\r\n                _this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                var indexPath = query._path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.refreshAppCheckToken = function (token) {\r\n        this.appCheckToken_ = token;\r\n        this.log_('App check token refreshed');\r\n        if (this.appCheckToken_) {\r\n            this.tryAppCheck();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us.\r\n            //If we're not connected, simply delete the credential so we dont become\r\n            // authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unappeck', {}, function () { });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */\r\n    PersistentConnection.prototype.tryAppCheck = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.appCheckToken_) {\r\n            this.sendRequest('appcheck', { 'token': this.appCheckToken_ }, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (status === 'ok') {\r\n                    _this.invalidAppCheckTokenCount_ = 0;\r\n                }\r\n                else {\r\n                    _this.onAppCheckRevoked_(status, data);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query._path.toString();\r\n        var queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        this.initConnection_();\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'apc') {\r\n            this.onAppCheckRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.initConnection_ = function () {\r\n        if (!this.realtime_ && this.firstConnection_) {\r\n            this.scheduleConnect_(0);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var onDataMessage, onReady, onDisconnect_1, connId, lastSessionId, canceled_1, connection_1, closeFn, sendRequestFn, forceRefresh, _a, authToken, appCheckToken, error_1;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!this.shouldReconnect_()) return [3 /*break*/, 4];\r\n                        this.log_('Making a connection attempt');\r\n                        this.lastConnectionAttemptTime_ = new Date().getTime();\r\n                        this.lastConnectionEstablishedTime_ = null;\r\n                        onDataMessage = this.onDataMessage_.bind(this);\r\n                        onReady = this.onReady_.bind(this);\r\n                        onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n                        connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n                        lastSessionId = this.lastSessionId;\r\n                        canceled_1 = false;\r\n                        connection_1 = null;\r\n                        closeFn = function () {\r\n                            if (connection_1) {\r\n                                connection_1.close();\r\n                            }\r\n                            else {\r\n                                canceled_1 = true;\r\n                                onDisconnect_1();\r\n                            }\r\n                        };\r\n                        sendRequestFn = function (msg) {\r\n                            assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                            connection_1.sendRequest(msg);\r\n                        };\r\n                        this.realtime_ = {\r\n                            close: closeFn,\r\n                            sendRequest: sendRequestFn\r\n                        };\r\n                        forceRefresh = this.forceTokenRefresh_;\r\n                        this.forceTokenRefresh_ = false;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        _b.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this.authTokenProvider_.getToken(forceRefresh),\r\n                                this.appCheckTokenProvider_.getToken(forceRefresh)\r\n                            ])];\r\n                    case 2:\r\n                        _a = __read.apply(void 0, [_b.sent(), 2]), authToken = _a[0], appCheckToken = _a[1];\r\n                        if (!canceled_1) {\r\n                            log('getToken() completed. Creating connection.');\r\n                            this.authToken_ = authToken && authToken.accessToken;\r\n                            this.appCheckToken_ = appCheckToken && appCheckToken.token;\r\n                            connection_1 = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect_1, \r\n                            /* onKill= */ function (reason) {\r\n                                warn(reason + ' (' + _this.repoInfo_.toString() + ')');\r\n                                _this.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                            }, lastSessionId);\r\n                        }\r\n                        else {\r\n                            log('getToken() completed but was canceled');\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        error_1 = _b.sent();\r\n                        this.log_('Failed to get token: ' + error_1);\r\n                        if (!canceled_1) {\r\n                            if (this.repoInfo_.nodeAdmin) {\r\n                                // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                                // But getToken() may also just have temporarily failed, so we still want to\r\n                                // continue retrying.\r\n                                warn(error_1);\r\n                            }\r\n                            closeFn();\r\n                        }\r\n                        return [3 /*break*/, 4];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onAppCheckRevoked_ = function (statusCode, explanation) {\r\n        log('App check token revoked: ' + statusCode + '/' + explanation);\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        // Note: We don't close the connection as the developer may not have\r\n        // enforcement enabled. The backend closes connections with enforcements.\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAppCheckTokenCount_++;\r\n            if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                this.appCheckTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        this.tryAppCheck();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (var i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    __extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    LeafNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    __extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\nvar Base12Num = /** @class */ (function () {\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = __assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = __assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = safeGet(_this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    __extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    __extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    PathIndex.prototype.toString = function () {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nvar PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\nvar MIN_PUSH_CHAR = '-';\r\nvar MAX_PUSH_CHAR = 'z';\r\nvar MAX_KEY_LEN = 786;\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\r\nvar successor = function (key) {\r\n    if (key === '' + INTEGER_32_MAX) {\r\n        // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\r\n        return MIN_PUSH_CHAR;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt + 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i_1 = 0; i_1 < next.length; i_1++) {\r\n        next[i_1] = key.charAt(i_1);\r\n    }\r\n    if (next.length < MAX_KEY_LEN) {\r\n        next.push(MIN_PUSH_CHAR);\r\n        return next.join('');\r\n    }\r\n    var i = next.length - 1;\r\n    while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\r\n        i--;\r\n    }\r\n    // `successor` was called on the largest possible key, so return the\r\n    // MAX_NAME, which sorts larger than all keys.\r\n    if (i === -1) {\r\n        return MAX_NAME;\r\n    }\r\n    var source = next[i];\r\n    var sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\r\n    next[i] = sourcePlusOne;\r\n    return next.slice(0, i + 1).join('');\r\n};\r\n// `key` is assumed to be non-empty.\r\nvar predecessor = function (key) {\r\n    if (key === '' + INTEGER_32_MIN) {\r\n        return MIN_NAME;\r\n    }\r\n    var keyAsInt = tryParseInt(key);\r\n    if (keyAsInt != null) {\r\n        return '' + (keyAsInt - 1);\r\n    }\r\n    var next = new Array(key.length);\r\n    for (var i = 0; i < next.length; i++) {\r\n        next[i] = key.charAt(i);\r\n    }\r\n    // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\r\n    // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\r\n    // than that, `predecessor(predecessor(key))`, is\r\n    //\r\n    // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\r\n    //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\r\n    //\r\n    // analogous to increment/decrement for base-10 integers.\r\n    //\r\n    // This works because lexigographic comparison works character-by-character,\r\n    // using length as a tie-breaker if one key is a prefix of the other.\r\n    if (next[next.length - 1] === MIN_PUSH_CHAR) {\r\n        if (next.length === 1) {\r\n            // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\r\n            return '' + INTEGER_32_MAX;\r\n        }\r\n        delete next[next.length - 1];\r\n        return next.join('');\r\n    }\r\n    // Replace the last character with it's immediate predecessor, and\r\n    // fill the suffix of the key with MAX_PUSH_CHAR. This is the\r\n    // lexicographically largest possible key smaller than `key`.\r\n    next[next.length - 1] = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length - 1]) - 1);\r\n    return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* VALUE */, snapshotNode: snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* CHILD_ADDED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* CHILD_REMOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* CHILD_CHANGED */,\r\n        snapshotNode: snapshotNode,\r\n        childName: childName,\r\n        oldSnap: oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* CHILD_MOVED */, snapshotNode: snapshotNode, childName: childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    QueryParams.prototype.hasStartAfter = function () {\r\n        return this.startAfterSet_;\r\n    };\r\n    QueryParams.prototype.hasEndBefore = function () {\r\n        return this.endBeforeSet_;\r\n    };\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* VIEW_FROM_LEFT */;\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    QueryParams.prototype.copy = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    return QueryParams;\r\n}());\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    var newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = successor(indexValue);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        var childKey = void 0;\r\n        if (key == null) {\r\n            childKey = MAX_NAME;\r\n        }\r\n        else {\r\n            childKey = successor(key);\r\n        }\r\n        params = queryParamsStartAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    var newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    var childKey;\r\n    var params;\r\n    if (queryParams.index_ === KEY_INDEX) {\r\n        if (typeof indexValue === 'string') {\r\n            indexValue = predecessor(indexValue);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        if (key == null) {\r\n            childKey = MIN_NAME;\r\n        }\r\n        else {\r\n            childKey = predecessor(key);\r\n        }\r\n        params = queryParamsEndAt(queryParams, indexValue, childKey);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    var newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    var qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    var orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        qs[\"startAt\" /* START_AT */] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[\"startAt\" /* START_AT */] +=\r\n                ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        qs[\"endAt\" /* END_AT */] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[\"endAt\" /* END_AT */] +=\r\n                ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    var obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* LIMIT */] = queryParams.limit_;\r\n        var viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    __extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    ReadonlyRestClient.prototype.get = function (query) {\r\n        var _this = this;\r\n        var queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        var pathString = query._path.toString();\r\n        var deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        return Promise.all([\r\n            this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\r\n            this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\r\n        ]).then(function (_a) {\r\n            var _b = __read(_a, 2), authToken = _b[0], appCheckToken = _b[1];\r\n            if (authToken && authToken.accessToken) {\r\n                queryStringParameters['auth'] = authToken.accessToken;\r\n            }\r\n            if (appCheckToken && appCheckToken.token) {\r\n                queryStringParameters['ac'] = appCheckToken.token;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        var child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                var value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            var childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                var safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, function (key, tree) {\r\n            var path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach(function (tree, key) {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = __assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nvar StatsReporter = /** @class */ (function () {\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\r\nfunction statsReporterIncludeStat(reporter, stat) {\r\n    reporter.statsToReport_[stat] = true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    };\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n    return EventGenerator;\r\n}());\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    var events = [];\r\n    var moves = [];\r\n    changes.forEach(function (change) {\r\n        if (change.type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n    filteredChanges.sort(function (a, b) {\r\n        return eventGeneratorCompareChanges(eventGenerator, a, b);\r\n    });\r\n    filteredChanges.forEach(function (change) {\r\n        var materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(function (registration) {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache: eventCache, serverCache: serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = new ImmutableTree(null);\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(relativePath);\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.set(pathPopFront(relativePath), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(pathPopFront(relativePath));\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = pathGetFront(relativePath);\r\n            var child = this.children.get(front) || new ImmutableTree(null);\r\n            var newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathGetFront(pathToFollow);\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathGetFront(pathToFollow);\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.empty = function () {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    };\r\n    return CompoundWrite;\r\n}());\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            var rootMostPath = rootmost.path;\r\n            var value = rootmost.value;\r\n            var relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            var subtree = new ImmutableTree(node);\r\n            var newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    var newWrite = compoundWrite;\r\n    each(updates, function (childKey, node) {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        var newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    var rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    var children = [];\r\n    var node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        var shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        snap: snap,\r\n        writeId: writeId,\r\n        visible: visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path: path,\r\n        children: changedChildren,\r\n        writeId: writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (var i = 0; i < writeTree.allWrites.length; i++) {\r\n        var record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    var idx = writeTree.allWrites.findIndex(function (s) {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    var writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    var removedWriteWasVisible = writeToRemove.visible;\r\n    var removedWriteOverlapsWithOtherWrites = false;\r\n    var i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        var currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            var children = writeToRemove.children;\r\n            each(children, function (childName) {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (var childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    var compoundWrite = CompoundWrite.empty();\r\n    for (var i = 0; i < writes.length; ++i) {\r\n        var write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            var writePath = write.path;\r\n            var relativePath = void 0;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        var child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            var deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            var subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                var filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                var mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    var completeChildren = ChildrenNode.EMPTY_NODE;\r\n    var topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        var merge_1 = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var node = compoundWriteApply(compoundWriteChildCompoundWrite(merge_1, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge_1).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(function (namedNode) {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    var path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    var path = pathChild(treePath, childKey);\r\n    var shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            var childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    var toIterate;\r\n    var merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    var shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        var nodes = [];\r\n        var cmp = index.getCompare();\r\n        var iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        var next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree: writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        assert(type === \"child_added\" /* CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === \"child_added\" /* CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    };\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        var nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter: filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    var accumulator = new ChildChangeAccumulator();\r\n    var newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        var overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        var merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        var ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    var changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes: changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    var eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        var oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    var oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var newEventCache = void 0, serverNode = void 0;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                var serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                var completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                var completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                var completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                var oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                var updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                var childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                var newEventChild = void 0;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    var eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    var oldServerSnap = oldViewCache.serverCache;\r\n    var newServerCache;\r\n    var serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        var newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        var childChangePath = pathPopFront(changePath);\r\n        var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    var newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    var oldEventSnap = oldViewCache.eventCache;\r\n    var newViewCache, newEventCache;\r\n    var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        var childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            var childChangePath = pathPopFront(changePath);\r\n            var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            var newChild = void 0;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                var childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                var newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach(function (relativePath, childNode) {\r\n        var writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach(function (relativePath, childNode) {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    var curViewCache = viewCache;\r\n    var viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    var serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n        if (serverNode.hasChild(childKey)) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n        var isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === undefined;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            var serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            var newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    var filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    var serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            var changedChildren_1 = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        var changedChildren_2 = new ImmutableTree(null);\r\n        affectedTree.foreach(function (mergePath, value) {\r\n            var serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    var oldServerNode = viewCache.serverCache;\r\n    var newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    var complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        var oldEventCache = viewCache.eventCache.getNode();\r\n        var newEventCache = void 0;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            var newNode = void 0;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                var serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            var childKey = pathGetFront(path);\r\n            var newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nvar View = /** @class */ (function () {\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_._queryParams;\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.serverCache;\r\n        var initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    Object.defineProperty(View.prototype, \"query\", {\r\n        get: function () {\r\n            return this.query_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return View;\r\n}());\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    var cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    var cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        var path_1 = view.query._path;\r\n        view.eventRegistrations_.forEach(function (registration) {\r\n            var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        var remaining = [];\r\n        for (var i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            var existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    var oldViewCache = view.viewCache_;\r\n    var result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    var eventSnap = view.viewCache_.eventCache;\r\n    var initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        var eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    var registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    return SyncPoint;\r\n}());\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    var e_1, _a;\r\n    var queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        var view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        var events = [];\r\n        try {\r\n            for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    var queryId = query._queryIdentifier;\r\n    var view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        var eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        var eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        var viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    var e_2, _a;\r\n    var queryId = query._queryIdentifier;\r\n    var removed = [];\r\n    var cancelEvents = [];\r\n    var hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        try {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            for (var _b = __values(syncPoint.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n                if (viewIsEmpty(view)) {\r\n                    syncPoint.views.delete(viewQueryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.query._queryParams.loadsAllData()) {\r\n                        removed.push(view.query);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        var view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed: removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    var e_3, _a;\r\n    var result = [];\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (!view.query._queryParams.loadsAllData()) {\r\n                result.push(view);\r\n            }\r\n        }\r\n    }\r\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_3) throw e_3.error; }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    var e_4, _a;\r\n    var serverCache = null;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n        }\r\n    }\r\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_4) throw e_4.error; }\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    var params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        var queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    var e_5, _a;\r\n    try {\r\n        for (var _b = __values(syncPoint.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var view = _c.value;\r\n            if (view.query._queryParams.loadsAllData()) {\r\n                return view;\r\n            }\r\n        }\r\n    }\r\n    catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_5) throw e_5.error; }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar referenceConstructor$1;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nvar syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    return SyncTree;\r\n}());\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert) {\r\n    if (revert === void 0) { revert = false; }\r\n    var write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    var needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        var affectedTree_1 = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree_1 = affectedTree_1.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, function (pathString) {\r\n                affectedTree_1 = affectedTree_1.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree_1, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    var changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    var path = query._path;\r\n    var maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    var cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        var removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        var removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        // We may have just removed one of many listeners and can short-circuit this whole process\r\n        // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n        // properly set up.\r\n        //\r\n        // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n        // queryId === 'default'\r\n        var removingDefault = -1 !==\r\n            removed.findIndex(function (query) {\r\n                return query._queryParams.loadsAllData();\r\n            });\r\n        var covered = syncTree.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n            return syncPointHasCompleteView(parentSyncPoint);\r\n        });\r\n        if (removingDefault && !covered) {\r\n            var subtree = syncTree.syncPointTree_.subtree(path);\r\n            // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n            // removal\r\n            if (!subtree.isEmpty()) {\r\n                // We need to fold over our subtree and collect the listeners to send\r\n                var newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                // Ok, we've collected all the listens we need. Set them up.\r\n                for (var i = 0; i < newViews.length; ++i) {\r\n                    var view = newViews[i], newQuery = view.query;\r\n                    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                    syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery_(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                }\r\n            }\r\n        }\r\n        // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n        // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n        // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n        if (!covered && removed.length > 0 && !cancelError) {\r\n            // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n            // default. Otherwise, we need to iterate through and cancel each individual query\r\n            if (removingDefault) {\r\n                // We don't tag default listeners\r\n                var defaultTag = null;\r\n                syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n            }\r\n            else {\r\n                removed.forEach(function (queryToRemove) {\r\n                    var tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                });\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    var queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        var r = syncTreeParseQueryKey_(queryKey);\r\n        var queryPath = r.path, queryId = r.queryId;\r\n        var relativePath = newRelativePath(queryPath, path);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        var op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    var foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        var subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild(function (childName, childSyncPoint) {\r\n            var completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    var viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        var queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        var tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    var events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n        var view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    var includeHiddenSets = true;\r\n    var writeTree = syncTree.pendingWriteTree_;\r\n    var serverCache = syncTree.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n        var relativePath = newRelativePath(pathSoFar, path);\r\n        var serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    var path = query._path;\r\n    var serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n        var relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    var syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var serverCacheComplete = serverCache != null;\r\n    var serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    var view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        var syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        var events = [];\r\n        var childName = pathGetFront(operation.path);\r\n        var childOperation = operation.operationForChild(childName);\r\n        var childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    var syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    var events = [];\r\n    syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n        var childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        var childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        var childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    var query = view.query;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    return {\r\n        hashFn: function () {\r\n            var cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: function (status) {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                var error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery_(syncTree, query) {\r\n    var queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    var splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    var syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    var writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            var completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            var views_1 = [];\r\n            if (maybeChildSyncPoint) {\r\n                views_1 = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, function (_key, childViews) {\r\n                views_1 = views_1.concat(childViews);\r\n            });\r\n            return views_1;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (var j = 0; j < queries.length; ++j) {\r\n        var removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            var removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            var removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    var path = query._path;\r\n    var tag = syncTreeTagForQuery_(syncTree, query);\r\n    var listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    var events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    var subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                var queries_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries_1 = queries_1.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function (view) { return view.query; }));\r\n                }\r\n                each(childMap, function (_key, childQueries) {\r\n                    queries_1 = queries_1.concat(childQueries);\r\n                });\r\n                return queries_1;\r\n            }\r\n        });\r\n        for (var i = 0; i < queriesToStop.length; ++i) {\r\n            var queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery_(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    function Tree(name, parent, node) {\r\n        if (name === void 0) { name = ''; }\r\n        if (parent === void 0) { parent = null; }\r\n        if (node === void 0) { node = { children: {}, childCount: 0 }; }\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n    return Tree;\r\n}());\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    var child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        var childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, function (child, childTree) {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, function (child) {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    var node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    var childEmpty = treeIsEmpty(child);\r\n    var childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nvar validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = pathSlice(curPath);\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, 'eventType') +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentName, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    var currList = null;\r\n    for (var i = 0; i < eventDataList.length; i++) {\r\n        var data = eventDataList[i];\r\n        var path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path: path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathEquals(eventPath, path);\r\n    });\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, function (eventPath) {\r\n        return pathContains(eventPath, changedPath) ||\r\n            pathContains(changedPath, eventPath);\r\n    });\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    var sentAll = true;\r\n    for (var i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        var eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            var eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (var i = 0; i < eventList.events.length; i++) {\r\n        var eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            var eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nvar MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckProvider_ = appCheckProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    return Repo;\r\n}());\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(function () { return repoOnConnectStatus(repo, /* connectStatus= */ true); }, 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, function (pathString, data, isMerge, tag) {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, function (connectStatus) {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, function (updates) {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(function (token) {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    repo.appCheckProvider_.addTokenChangeListener(function (result) {\r\n        repo.server_.refreshAppCheckToken(result.token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, function () { return new StatsReporter(repo.stats_, repo.server_); });\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            var infoEvents = [];\r\n            var node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(function () {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: function () { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: function (query, tag, currentHashFn, onComplete) {\r\n            repo.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                var events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: function (query, tag) {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    var offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    var offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    var path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    var events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            var taggedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            var taggedSnap = nodeFromJSON$1(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        var changedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        var snap = nodeFromJSON$1(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    var affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\n// TODO: This should be @private but it's used by test_access.js and internal.js\r\nfunction repoInterceptServerData(repo, callback) {\r\n    repo.interceptServerDataCallback_ = callback;\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, function (key, value) {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    var path = new Path('/.info/' + pathString);\r\n    var newNode = nodeFromJSON$1(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    var events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    var cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(function (payload) {\r\n        var node = nodeFromJSON$1(payload);\r\n        var events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n        return Promise.resolve(node);\r\n    }, function (err) {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n    var existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    var writeId = repoGetNextWriteId(repo);\r\n    var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n        var success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    var affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    var empty = true;\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var changedChildren = {};\r\n    each(childrenToMerge, function (changedKey, changedValue) {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON$1(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        var writeId_1 = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId_1);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId_1, !success);\r\n            var affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, function (changedPath) {\r\n            var affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    var serverValues = repoGenerateServerValues(repo);\r\n    var resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), function (path, node) {\r\n        var resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    var events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), function (path, snap) {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        var affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    var newNode = nodeFromJSON$1(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    var newNode = nodeFromJSON$1(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, function (childName, childNode) {\r\n                var newChildNode = nodeFromJSON$1(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    var events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoStats(repo, showDelta) {\r\n    if (showDelta === void 0) { showDelta = false; }\r\n    if (typeof console === 'undefined') {\r\n        return;\r\n    }\r\n    var stats;\r\n    if (showDelta) {\r\n        if (!repo.statsListener_) {\r\n            repo.statsListener_ = new StatsListener(repo.stats_);\r\n        }\r\n        stats = repo.statsListener_.get();\r\n    }\r\n    else {\r\n        stats = repo.stats_.get();\r\n    }\r\n    var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n        return Math.max(currentValue.length, previousValue);\r\n    }, 0);\r\n    each(stats, function (stat, value) {\r\n        var paddedStat = stat;\r\n        // pad stat names to be the same length (plus 2 extra spaces).\r\n        for (var i = stat.length; i < longestName + 2; i++) {\r\n            paddedStat += ' ';\r\n        }\r\n        console.log(paddedStat + value);\r\n    });\r\n}\r\nfunction repoStatsIncrementCounter(repo, metric) {\r\n    repo.stats_.incrementCounter(metric);\r\n    statsReporterIncludeStat(repo.statsReporter_, metric);\r\n}\r\nfunction repoLog(repo) {\r\n    var varArgs = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        varArgs[_i - 1] = arguments[_i];\r\n    }\r\n    var prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log.apply(void 0, __spreadArray([prefix], __read(varArgs)));\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(function () {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                var code = (status || 'error').toUpperCase();\r\n                var message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                var error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* RUN */;\r\n        var queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        var nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        var serverValues = repoGenerateServerValues(repo);\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        var events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node) {\r\n    if (node === void 0) { node = repo.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        var queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === 0 /* RUN */; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, function (childNode) {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        assert(txn.status === 0 /* RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* SENT */;\r\n        txn.retryCount++;\r\n        var relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            var callbacks = [];\r\n            var _loop_1 = function (i) {\r\n                queue[i].status = 2 /* COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved);\r\n                    });\r\n                }\r\n                queue[i].unwatcher();\r\n            };\r\n            for (var i = 0; i < queue.length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    var rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    var path = treeGetPath(rootMostTransactionNode);\r\n    var queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === 0 /* RUN */;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    var _loop_2 = function (i) {\r\n        var transaction = queue[i];\r\n        var relativePath = newRelativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = repoGenerateServerValues(repo);\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(null, false, queue[i].currentInputSnapshot);\r\n                    });\r\n                }\r\n                else {\r\n                    callbacks.push(function () {\r\n                        return queue[i].onComplete(new Error(abortReason), false, null);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    for (var i = 0; i < queue.length; i++) {\r\n        _loop_2(i);\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    var transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) { return a.order - b.order; });\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    var nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, function (child) {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, function (childNode) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    var affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    var transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, function (node) {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    var queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    };\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nvar CallbackContext = /** @class */ (function () {\r\n    function CallbackContext(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    CallbackContext.prototype.onValue = function (expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    };\r\n    CallbackContext.prototype.onCancel = function (error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    };\r\n    Object.defineProperty(CallbackContext.prototype, \"hasCancelCallback\", {\r\n        get: function () {\r\n            return !!this.cancelCallback;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    CallbackContext.prototype.matches = function (other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback ===\r\n                other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    };\r\n    return CallbackContext;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function OnDisconnect(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.cancel = function () {\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    OnDisconnect.prototype.remove = function () {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.set = function (value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    OnDisconnect.prototype.update = function (values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        var deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(function () { }));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nvar QueryImpl = /** @class */ (function () {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    function QueryImpl(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    Object.defineProperty(QueryImpl.prototype, \"key\", {\r\n        get: function () {\r\n            if (pathIsEmpty(this._path)) {\r\n                return null;\r\n            }\r\n            else {\r\n                return pathGetBack(this._path);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"ref\", {\r\n        get: function () {\r\n            return new ReferenceImpl(this._repo, this._path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryIdentifier\", {\r\n        get: function () {\r\n            var obj = queryParamsGetQueryObject(this._queryParams);\r\n            var id = ObjectToUniqueKey(obj);\r\n            return id === '{}' ? 'default' : id;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(QueryImpl.prototype, \"_queryObject\", {\r\n        /**\r\n         * An object representation of the query parameters used by this Query.\r\n         */\r\n        get: function () {\r\n            return queryParamsGetQueryObject(this._queryParams);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    QueryImpl.prototype.isEqual = function (other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        var sameRepo = this._repo === other._repo;\r\n        var samePath = pathEquals(this._path, other._path);\r\n        var sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    QueryImpl.prototype.toJSON = function () {\r\n        return this.toString();\r\n    };\r\n    QueryImpl.prototype.toString = function () {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    };\r\n    return QueryImpl;\r\n}());\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    var startNode = null;\r\n    var endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nvar ReferenceImpl = /** @class */ (function (_super) {\r\n    __extends(ReferenceImpl, _super);\r\n    /** @hideconstructor */\r\n    function ReferenceImpl(repo, path) {\r\n        return _super.call(this, repo, path, new QueryParams(), false) || this;\r\n    }\r\n    Object.defineProperty(ReferenceImpl.prototype, \"parent\", {\r\n        get: function () {\r\n            var parentPath = pathParent(this._path);\r\n            return parentPath === null\r\n                ? null\r\n                : new ReferenceImpl(this._repo, parentPath);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceImpl.prototype, \"root\", {\r\n        get: function () {\r\n            var ref = this;\r\n            while (ref.parent !== null) {\r\n                ref = ref.parent;\r\n            }\r\n            return ref;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ReferenceImpl;\r\n}(QueryImpl));\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    function DataSnapshot(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    Object.defineProperty(DataSnapshot.prototype, \"priority\", {\r\n        /**\r\n         * Gets the priority value of the data in this `DataSnapshot`.\r\n         *\r\n         * Applications need not use priority but can order collections by\r\n         * ordinary properties (see\r\n         * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n         * ).\r\n         */\r\n        get: function () {\r\n            // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n            return this._node.getPriority().val();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        /**\r\n         * The key (last part of the path) of the location of this `DataSnapshot`.\r\n         *\r\n         * The last token in a Database location is considered its key. For example,\r\n         * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n         * `DataSnapshot` will return the key for the location that generated it.\r\n         * However, accessing the key on the root URL of a Database will return\r\n         * `null`.\r\n         */\r\n        get: function () {\r\n            return this.ref.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSnapshot.prototype, \"size\", {\r\n        /** Returns the number of child properties of this `DataSnapshot`. */\r\n        get: function () {\r\n            return this._node.numChildren();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        var childPath = new Path(path);\r\n        var childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        return !this._node.isEmpty();\r\n    };\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        return this._node.val(true);\r\n    };\r\n    /**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, function (key, node) {\r\n            return action(new DataSnapshot(node, child(_this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        var childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    };\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    DataSnapshot.prototype.val = function () {\r\n        return this._node.val();\r\n    };\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    var parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    var repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    var now = repoServerTime(parent._repo);\r\n    var name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    var thennablePushRef = child(parent, name);\r\n    var pushRef = child(parent, name);\r\n    var promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(function () { return pushRef; });\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    var deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    var deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(function () { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A promise which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    return repoGetValue(query._repo, query).then(function (node) {\r\n        return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    function ValueEventRegistration(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    };\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, null);\r\n            };\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    };\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbackContext !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of a child_x event.\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    function ChildEventRegistration(eventType, callbackContext) {\r\n        this.eventType = eventType;\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return this.eventType === eventToCheck;\r\n    };\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        var childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        var index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\r\n    };\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var _this = this;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return function () {\r\n                return _this.callbackContext.onCancel(eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            return function () {\r\n                return _this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            return (this.eventType === other.eventType &&\r\n                (!this.callbackContext ||\r\n                    !other.callbackContext ||\r\n                    this.callbackContext.matches(other.callbackContext)));\r\n        }\r\n        return false;\r\n    };\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return !!this.callbackContext;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    var cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        var userCallback_1 = callback;\r\n        var onceCallback = function (dataSnapshot, previousChildName) {\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n            userCallback_1(dataSnapshot, previousChildName);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    var callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    var container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration(eventType, callbackContext);\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return function () { return repoRemoveEventCallbackForQuery(query._repo, query, container); };\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    var container = null;\r\n    var expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        container = new ChildEventRegistration(eventType, expCallback);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nvar QueryConstraint = /** @class */ (function () {\r\n    function QueryConstraint() {\r\n    }\r\n    return QueryConstraint;\r\n}());\r\nvar QueryEndAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndAtConstraint, _super);\r\n    function QueryEndAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        var newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nvar QueryEndBeforeConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEndBeforeConstraint, _super);\r\n    function QueryEndBeforeConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEndBeforeConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        var newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryEndBeforeConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nvar QueryStartAtConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAtConstraint, _super);\r\n    function QueryStartAtConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAtConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        var newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAtConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value, key) {\r\n    if (value === void 0) { value = null; }\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nvar QueryStartAfterConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryStartAfterConstraint, _super);\r\n    function QueryStartAfterConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryStartAfterConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        var newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    };\r\n    return QueryStartAfterConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nvar QueryLimitToFirstConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToFirstConstraint, _super);\r\n    function QueryLimitToFirstConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToFirstConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToFirstConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nvar QueryLimitToLastConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryLimitToLastConstraint, _super);\r\n    function QueryLimitToLastConstraint(_limit) {\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = _limit;\r\n        return _this;\r\n    }\r\n    QueryLimitToLastConstraint.prototype._apply = function (query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    };\r\n    return QueryLimitToLastConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nvar QueryOrderByChildConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByChildConstraint, _super);\r\n    function QueryOrderByChildConstraint(_path) {\r\n        var _this = _super.call(this) || this;\r\n        _this._path = _path;\r\n        return _this;\r\n    }\r\n    QueryOrderByChildConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        var parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByChildConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nvar QueryOrderByKeyConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByKeyConstraint, _super);\r\n    function QueryOrderByKeyConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByKeyConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        var newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByKeyConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nvar QueryOrderByPriorityConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByPriorityConstraint, _super);\r\n    function QueryOrderByPriorityConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByPriorityConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        var newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByPriorityConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nvar QueryOrderByValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryOrderByValueConstraint, _super);\r\n    function QueryOrderByValueConstraint() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    QueryOrderByValueConstraint.prototype._apply = function (query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        var newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    };\r\n    return QueryOrderByValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nvar QueryEqualToValueConstraint = /** @class */ (function (_super) {\r\n    __extends(QueryEqualToValueConstraint, _super);\r\n    function QueryEqualToValueConstraint(_value, _key) {\r\n        var _this = _super.call(this) || this;\r\n        _this._value = _value;\r\n        _this._key = _key;\r\n        return _this;\r\n    }\r\n    QueryEqualToValueConstraint.prototype._apply = function (query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    };\r\n    return QueryEqualToValueConstraint;\r\n}(QueryConstraint));\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query) {\r\n    var e_1, _a;\r\n    var queryConstraints = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        queryConstraints[_i - 1] = arguments[_i];\r\n    }\r\n    var queryImpl = getModularInstance(query);\r\n    try {\r\n        for (var queryConstraints_1 = __values(queryConstraints), queryConstraints_1_1 = queryConstraints_1.next(); !queryConstraints_1_1.done; queryConstraints_1_1 = queryConstraints_1.next()) {\r\n            var constraint = queryConstraints_1_1.value;\r\n            queryImpl = constraint._apply(queryImpl);\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (queryConstraints_1_1 && !queryConstraints_1_1.done && (_a = queryConstraints_1.return)) _a.call(queryConstraints_1);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar repos = {};\r\n/**\r\n * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n */\r\nvar useRestClient = false;\r\n/**\r\n * Update an existing repo in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\r\n    repo.repoInfo_ = new RepoInfo(host + \":\" + port, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n    if (tokenProvider) {\r\n        repo.authTokenProvider_ = tokenProvider;\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\r\n    var dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\r\n    }\r\n    var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    var repoInfo = parsedUrl.repoInfo;\r\n    var isEmulator;\r\n    var dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined') {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    var authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    var repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\r\n    return new FirebaseDatabase(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    var appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(\"Database \" + appName + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\r\n    var appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    var repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nvar FirebaseDatabase = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function FirebaseDatabase(_repoInternal, \r\n    /** The FirebaseApp associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a database instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    Object.defineProperty(FirebaseDatabase.prototype, \"_repo\", {\r\n        get: function () {\r\n            if (!this._instanceStarted) {\r\n                repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n                this._instanceStarted = true;\r\n            }\r\n            return this._repoInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseDatabase.prototype, \"_root\", {\r\n        get: function () {\r\n            if (!this._rootInternal) {\r\n                this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n            }\r\n            return this._rootInternal;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    FirebaseDatabase.prototype._delete = function () {\r\n        this._checkNotDeleted('delete');\r\n        repoManagerDeleteRepo(this._repo, this.app.name);\r\n        this._repoInternal = null;\r\n        this._rootInternal = null;\r\n        return Promise.resolve();\r\n    };\r\n    FirebaseDatabase.prototype._checkNotDeleted = function (apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    return FirebaseDatabase;\r\n}());\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\r\nfunction useDatabaseEmulator(db, host, port, options) {\r\n    if (options === void 0) { options = {}; }\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    var repo = db._repoInternal;\r\n    var tokenProvider = undefined;\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        if (options.mockUserToken) {\r\n            fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\r\n        }\r\n        tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\r\n    }\r\n    else if (options.mockUserToken) {\r\n        var token = createMockUserToken(options.mockUserToken, db.app.options.projectId);\r\n        tokenProvider = new EmulatorTokenProvider(token);\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of Firebase.transaction.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /** @hideconstructor */\r\n    function TransactionResult(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    TransactionResult.prototype.toJSON = function () {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `transaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A Promise that can optionally be used instead of the onComplete\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    var applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    var deferred = new Deferred();\r\n    var promiseComplete = function (error, committed, node) {\r\n        var dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    var unwatcher = onValue(ref, function () { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar OnDisconnect$1 = /** @class */ (function () {\r\n    function OnDisconnect(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 'onComplete', onComplete, true);\r\n        var result = this._delegate.cancel();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.remove', 'onComplete', onComplete, true);\r\n        var result = this._delegate.remove();\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateCallback('OnDisconnect.set', 'onComplete', onComplete, true);\r\n        var result = this._delegate.set(value);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('OnDisconnect.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = this._delegate.setWithPriority(value, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateCallback('OnDisconnect.update', 'onComplete', onComplete, true);\r\n        var result = this._delegate.update(objectToMerge);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult$1 = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot$1 = /** @class */ (function () {\r\n    function DataSnapshot(_database, _delegate) {\r\n        this._database = _database;\r\n        this._delegate = _delegate;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this._delegate.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @returns JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this._delegate.exportVal();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @returns Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return this._delegate.exists();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (path) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        path = String(path);\r\n        validatePathString('DataSnapshot.child', 'path', path, false);\r\n        return new DataSnapshot(this._database, this._delegate.child(path));\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param path - Path to a child.\r\n     * @returns Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (path) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 'path', path, false);\r\n        return this._delegate.hasChild(path);\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @returns The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        return this._delegate.priority;\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each child.\r\n     * @returns True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 'action', action, false);\r\n        return this._delegate.forEach(function (expDataSnapshot) {\r\n            return action(new DataSnapshot(_this._database, expDataSnapshot));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @returns True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        return this._delegate.hasChildren();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this._delegate.key;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @returns The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this._delegate.size;\r\n    };\r\n    /**\r\n     * @returns The Firebase reference for the location this snapshot's data came\r\n     * from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return new Reference(this._database, this._delegate.ref);\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(database, _delegate) {\r\n        this.database = database;\r\n        this._delegate = _delegate;\r\n    }\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        var _this = this;\r\n        var _a;\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateCallback('Query.on', 'callback', callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            callback.call(ret.context, new DataSnapshot$1(_this.database, expSnapshot), previousChildName);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = (_a = ret.cancel) === null || _a === void 0 ? void 0 : _a.bind(ret.context);\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback);\r\n                return callback;\r\n            default:\r\n                throw new Error(errorPrefix('Query.on', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n    };\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', eventType, true);\r\n        validateCallback('Query.off', 'callback', callback, true);\r\n        validateContextObject('Query.off', 'context', context, true);\r\n        if (callback) {\r\n            var valueCallback = function () { };\r\n            valueCallback.userCallback = callback;\r\n            valueCallback.context = context;\r\n            off(this._delegate, eventType, valueCallback);\r\n        }\r\n        else {\r\n            off(this._delegate, eventType);\r\n        }\r\n    };\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    Query.prototype.get = function () {\r\n        var _this = this;\r\n        return get(this._delegate).then(function (expSnapshot) {\r\n            return new DataSnapshot$1(_this.database, expSnapshot);\r\n        });\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     */\r\n    Query.prototype.once = function (eventType, callback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateCallback('Query.once', 'callback', callback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        var deferred = new Deferred();\r\n        var valueCallback = function (expSnapshot, previousChildName) {\r\n            var result = new DataSnapshot$1(_this.database, expSnapshot);\r\n            if (callback) {\r\n                callback.call(ret.context, result, previousChildName);\r\n            }\r\n            deferred.resolve(result);\r\n        };\r\n        valueCallback.userCallback = callback;\r\n        valueCallback.context = ret.context;\r\n        var cancelCallback = function (error) {\r\n            if (ret.cancel) {\r\n                ret.cancel.call(ret.context, error);\r\n            }\r\n            deferred.reject(error);\r\n        };\r\n        switch (eventType) {\r\n            case 'value':\r\n                onValue(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_added':\r\n                onChildAdded(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_removed':\r\n                onChildRemoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_changed':\r\n                onChildChanged(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            case 'child_moved':\r\n                onChildMoved(this._delegate, valueCallback, cancelCallback, {\r\n                    onlyOnce: true\r\n                });\r\n                break;\r\n            default:\r\n                throw new Error(errorPrefix('Query.once', 'eventType') +\r\n                    'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                    '\"child_changed\", or \"child_moved\".');\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToFirst(limit)));\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, limitToLast(limit)));\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByChild(path)));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByKey()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByPriority()));\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        return new Query(this.database, query(this._delegate, orderByValue()));\r\n    };\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAt(value, name)));\r\n    };\r\n    Query.prototype.startAfter = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAfter', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, startAfter(value, name)));\r\n    };\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endAt(value, name)));\r\n    };\r\n    Query.prototype.endBefore = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endBefore', 0, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, endBefore(value, name)));\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        return new Query(this.database, query(this._delegate, equalTo(value, name)));\r\n    };\r\n    /**\r\n     * @returns URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this._delegate.toString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this._delegate.toJSON();\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        return this._delegate.isEqual(other._delegate);\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param fnName - The function name (on or once)\r\n     *\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: undefined, context: undefined };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 'cancel', ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 'context', ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 'cancelOrContext') +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return new Reference(this.database, new ReferenceImpl(this._delegate._repo, this._delegate._path));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\r\nvar Reference = /** @class */ (function (_super) {\r\n    __extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     */\r\n    function Reference(database, _delegate) {\r\n        var _this = _super.call(this, database, new QueryImpl(_delegate._repo, _delegate._path, new QueryParams(), false)) || this;\r\n        _this.database = database;\r\n        _this._delegate = _delegate;\r\n        return _this;\r\n    }\r\n    /** @returns {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        return this._delegate.key;\r\n    };\r\n    Reference.prototype.child = function (pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        return new Reference(this.database, child(this._delegate, pathString));\r\n    };\r\n    /** @returns {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parent = this._delegate.parent;\r\n        return parent ? new Reference(this.database, parent) : null;\r\n    };\r\n    /** @returns {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        return new Reference(this.database, this._delegate.root);\r\n    };\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateCallback('Reference.set', 'onComplete', onComplete, true);\r\n        var result = set(this._delegate, newVal);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.update = function (values, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        if (Array.isArray(values)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < values.length; ++i) {\r\n                newObjectToMerge['' + i] = values[i];\r\n            }\r\n            values = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateWritablePath('Reference.update', this._delegate._path);\r\n        validateCallback('Reference.update', 'onComplete', onComplete, true);\r\n        var result = update(this._delegate, values);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateCallback('Reference.setWithPriority', 'onComplete', onComplete, true);\r\n        var result = setWithPriority(this._delegate, newVal, newPriority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.remove = function (onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateCallback('Reference.remove', 'onComplete', onComplete, true);\r\n        var result = remove(this._delegate);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        var _this = this;\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateCallback('Reference.transaction', 'transactionUpdate', transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 'onComplete', onComplete, true);\r\n        validateBoolean('Reference.transaction', 'applyLocally', applyLocally, true);\r\n        var result = runTransaction(this._delegate, transactionUpdate, {\r\n            applyLocally: applyLocally\r\n        }).then(function (transactionResult) {\r\n            return new TransactionResult$1(transactionResult.committed, new DataSnapshot$1(_this.database, transactionResult.snapshot));\r\n        });\r\n        if (onComplete) {\r\n            result.then(function (transactionResult) {\r\n                return onComplete(null, transactionResult.committed, transactionResult.snapshot);\r\n            }, function (error) { return onComplete(error, false, null); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateCallback('Reference.setPriority', 'onComplete', onComplete, true);\r\n        var result = setPriority(this._delegate, priority);\r\n        if (onComplete) {\r\n            result.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        return result;\r\n    };\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        var _this = this;\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateCallback('Reference.push', 'onComplete', onComplete, true);\r\n        var expPromise = push(this._delegate, value);\r\n        var promise = expPromise.then(function (expRef) { return new Reference(_this.database, expRef); });\r\n        if (onComplete) {\r\n            promise.then(function () { return onComplete(null); }, function (error) { return onComplete(error); });\r\n        }\r\n        var result = new Reference(this.database, expPromise);\r\n        result.then = promise.then.bind(promise);\r\n        result.catch = promise.catch.bind(promise, undefined);\r\n        return result;\r\n    };\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this._delegate._path);\r\n        return new OnDisconnect$1(new OnDisconnect(this._delegate._repo, this._delegate._path));\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     */\r\n    function Database(_delegate, app) {\r\n        var _this = this;\r\n        this._delegate = _delegate;\r\n        this.app = app;\r\n        this.INTERNAL = {\r\n            delete: function () { return _this._delegate._delete(); }\r\n        };\r\n    }\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host - the emulator host (ex: localhost)\r\n     * @param port - the emulator port (ex: 8080)\r\n     * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n     */\r\n    Database.prototype.useEmulator = function (host, port, options) {\r\n        if (options === void 0) { options = {}; }\r\n        useDatabaseEmulator(this._delegate, host, port, options);\r\n    };\r\n    Database.prototype.ref = function (path) {\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            var childRef = refFromURL(this._delegate, path.toString());\r\n            return new Reference(this, childRef);\r\n        }\r\n        else {\r\n            var childRef = ref(this._delegate, path);\r\n            return new Reference(this, childRef);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @returns Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        var apiName = 'database.refFromURL';\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        var childRef = refFromURL(this._delegate, url);\r\n        return new Reference(this, childRef);\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        return goOffline(this._delegate);\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        return goOnline(this._delegate);\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: serverTimestamp(),\r\n        increment: function (delta) { return increment(delta); }\r\n    };\r\n    return Database;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    var connection = ref._delegate._repo.persistentConnection_;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    connection.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    repoStats(ref._delegate._repo, showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    repoStatsIncrementCounter(ref._delegate._repo, metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref._delegate._repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return repoInterceptServerData(ref._delegate._repo, callback);\r\n};\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAuthImpl - custom auth implementation\r\n */\r\nfunction initStandalone(_a) {\r\n    var app = _a.app, url = _a.url, version = _a.version, customAuthImpl = _a.customAuthImpl, namespace = _a.namespace, _b = _a.nodeAdmin, nodeAdmin = _b === void 0 ? false : _b;\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', function () { return customAuthImpl; }, \"PRIVATE\" /* PRIVATE */));\r\n    return {\r\n        instance: new Database(repoManagerDatabaseFromApp(app, authProvider, \r\n        /* appCheckProvider= */ undefined, url, nodeAdmin), app),\r\n        namespace: namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nvar ConnectionTarget = RepoInfo;\r\nvar queryIdentifier = function (query) {\r\n    return query._delegate._queryIdentifier;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, _a) {\r\n        var url = _a.instanceIdentifier;\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var appCheckProvider = container.getProvider('app-check-internal');\r\n        return new Database(repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url), app);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot$1,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexport { DataSnapshot$1 as DataSnapshot, Database, OnDisconnect$1 as OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };\n//# sourceMappingURL=index.esm.js.map\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}